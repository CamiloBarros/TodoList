.taskList {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-md);
}

.taskItem {
  background-color: var(--color-bg-primary);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-lg);
  padding: var(--spacing-lg);
  transition: all var(--transition-fast);
}

.taskItem:hover {
  box-shadow: var(--shadow-sm);
  border-color: var(--color-border-hover);
}

.taskItem.completed {
  opacity: 0.7;
  background-color: var(--color-bg-secondary);
}

.taskItem.overdue {
  border-left: 4px solid var(--color-danger);
}

.taskHeader {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-sm);
}

.taskContent {
  flex: 1;
  min-width: 0;
}

.taskTitle {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--color-text-primary);
  margin: 0 0 var(--spacing-xs) 0;
  cursor: pointer;
  transition: color var(--transition-fast);
}

.taskTitle:hover {
  color: var(--color-primary);
}

.taskTitle.completed {
  text-decoration: line-through;
  color: var(--color-text-muted);
}

.taskDescription {
  font-size: var(--font-size-sm);
  color: var(--color-text-secondary);
  margin: 0 0 var(--spacing-sm) 0;
  line-height: 1.5;
}

.taskMeta {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: var(--spacing-sm);
  font-size: var(--font-size-sm);
  color: var(--color-text-muted);
}

.taskActions {
  display: flex;
  align-items: flex-start;
  gap: var(--spacing-xs);
}

.actionButton {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  border: none;
  border-radius: var(--radius-md);
  background-color: transparent;
  color: var(--color-text-muted);
  cursor: pointer;
  transition: all var(--transition-fast);
}

.actionButton:hover {
  background-color: var(--color-bg-tertiary);
  color: var(--color-text-primary);
}

.actionButton.complete {
  color: var(--color-success);
}

.actionButton.complete:hover {
  background-color: var(--color-success-light);
}

.actionButton.edit:hover {
  background-color: var(--color-primary-light);
  color: var(--color-primary);
}

.actionButton.delete:hover {
  background-color: var(--color-danger-light);
  color: var(--color-danger);
}

.priorityBadge {
  display: inline-flex;
  align-items: center;
  padding: var(--spacing-xs) var(--spacing-sm);
  border-radius: var(--radius-full);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

.priorityBadge.high {
  background-color: var(--color-danger-light);
  color: var(--color-danger);
}

.priorityBadge.medium {
  background-color: var(--color-warning-light);
  color: var(--color-warning);
}

.priorityBadge.low {
  background-color: var(--color-success-light);
  color: var(--color-success);
}

.categoryBadge {
  display: inline-flex;
  align-items: center;
  padding: var(--spacing-xs) var(--spacing-sm);
  background-color: var(--color-primary-light);
  color: var(--color-primary);
  border-radius: var(--radius-md);
  font-size: var(--font-size-xs);
  font-weight: var(--font-weight-medium);
}

.tagList {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacing-xs);
}

.tag {
  display: inline-flex;
  align-items: center;
  padding: var(--spacing-xs) var(--spacing-sm);
  border: 1px solid;
  border-radius: var(--radius-sm);
  font-size: var(--font-size-xs);
  /* Background color and text color will be set inline */
}

.dueDateBadge {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  font-size: var(--font-size-xs);
  color: var(--color-text-muted);
}

.dueDateBadge.overdue {
  color: var(--color-danger);
  font-weight: var(--font-weight-medium);
}

.dueDateBadge.today {
  color: var(--color-warning);
  font-weight: var(--font-weight-medium);
}

.emptyState {
  text-align: center;
  padding: var(--spacing-2xl);
  color: var(--color-text-muted);
}

.emptyState h3 {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  margin: 0 0 var(--spacing-sm) 0;
}

.emptyState p {
  font-size: var(--font-size-sm);
  margin: 0;
}

/* Responsive */
@media (max-width: 768px) {
  .taskHeader {
    flex-direction: column;
    align-items: stretch;
  }

  .taskActions {
    align-self: flex-end;
  }

  .taskMeta {
    flex-direction: column;
    align-items: flex-start;
    gap: var(--spacing-xs);
  }
}
